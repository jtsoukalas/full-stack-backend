services:
  mysql:
    image: mysql:latest
    ports:
      - '3307:3306'
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-db}
      MYSQL_USER: ${MYSQL_USER:-user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
    volumes:
      - ./data/mysql/:/var/lib/mysql
    depends_on: []
    networks: []
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'
    init: false
    restart: always
  neo4j:
    image: neo4j:latest
    ports:
      - '7474:7474'
      - '7687:7687'
    environment:
      NEO4J_AUTH: ${NEO4J_AUTH:-neo4j/password}
      NEO4J_dbms_memory_heap_initial__size: ${NEO4J_HEAP_SIZE:-256M}
      NEO4J_dbms_memory_heap_max__size: ${NEO4J_HEAP_MAX_SIZE:-512M}
      NEO4J_dbms_default__listen__address: 0.0.0.0
      NEO4J_ACCEPT_LICENSE_AGREEMENT: '"yes"'
    volumes:
      - ./data/neo4j/:/data
    depends_on: []
    networks: []
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1G'
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT:-2181}
    ports:
      - "2181:2181"
    networks:
      - kafka_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1G'

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID:-1}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT:-zookeeper:2181}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS:-PLAINTEXT://kafka:9092}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP:-PLAINTEXT:PLAINTEXT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:-1}
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    volumes:
      - ./kafka/create-topics.sh:/usr/bin/create-topics.sh
#    command: "bash /usr/bin/create-topics.sh"
    networks:
      - kafka_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1G'

  kafka-manager:
    image: hlebalbau/kafka-manager:latest
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: zookeeper:2181
      KM_ARGS: -Dkafka.manager.zkhosts=zookeeper:2181 -Dapplication.secret=letmein -Dkafka.manager.clusterName="kafka-cluster" -Dkafka.manager.brokerViewUpdateSeconds=30 -Dkafka.manager.deleteClusterEnable=true
    depends_on:
      - zookeeper
    networks:
      - kafka_network

  erp_producer:
    image: python:3.9-slim
    container_name: erp_producer
    depends_on:
      - kafka
    working_dir: /app
    volumes:
      - ./producers/erp/:/app
    command: >
      sh -c "
      pip install -r requirements.txt &&
      python producer.py
      "
    networks:
      - kafka_network

  graph_producer:
    image: python:3.9-slim
    container_name: graph_producer
    depends_on:
      - kafka
    working_dir: /app
    volumes:
      - ./producers/graph/:/app
    command: >
      sh -c "
      pip install -r requirements.txt &&
      python producer.py
      "
    networks:
      - kafka_network

  kafka_consumer:
    image: python:3.9-slim
    container_name: kafka_consumer
    depends_on:
      - kafka
    working_dir: /app
    volumes:
      - ./consumer/:/app
    command: >
      sh -c "
      pip install -r requirements.txt &&
      python consumer.py
      "
    networks:
      - kafka_network

networks:
  kafka_network:
    driver: bridge